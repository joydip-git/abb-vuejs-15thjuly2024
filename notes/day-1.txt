s/w: Node JS
Editor: VS Code

What is SPA?

index.html
<html>
	<head></head>
	<body>
		<div id="root">
			design
		</div>
	</body>
</html>

a.html
<div>
	Hi....
</div>

b.html
<table></table>

const Home = lazy(()=>import('./..'))

import Home from './'


<app-header></app-header>

<Header />

<Header /> => <app-header>


<Home /> 

<div>
	<Header/>
	<SidePanel />
	<ContentPanel />
	<Footer />
</div>

/home => Home
/about => About

Client-side rendering
Server-side rendering

PWA

Angular => JS "framework"
+ ionic +Cordova apis => mobile

React JS => JS "library" 
React Native => Mobile apps

Vue JS => framework, SPA, client-side and server-side
it helps you make a very interactive and "reactive" web application

Vue JS App

vue-js-apps
	first-vue-app
	second-vue-app

when the entire DOM is created, then "DOMContentLoaded" event gets fired. "defer" attribute will help you load the script after that event.

Node JS => open source JS runtime built at the top of JS engine (V8 => is also part of the chrome browser)
Ryan Dahl (2009)

JS data types:
string, boolean, number, object, function

NaN, undefined, null, Infinity

Vue JS App:

{
	data:function(){
		return {
			prop1:value1,
			prop2:value2
		}
	},
	methods:{
		m1(){}
		m2(){}
	}
}


{
		prop1:value1,
		prop2:value2,
		m1(){},
		m2(){}
}

{{ prop1 }}

different techniques to create a Vue App:
a. options api (the properties of Vue App configuration object)
b. composition api (from Vue JS version 3)

React Element
{
	type:'div',
	attributes:{id:'root'},
	children:[]

}

HTML Input element

Vue JS CLI (Command Line Interface)
>npm install @vue/cli --location=global

>npx @vue/latest create


CounterComp
FooterComp => 'footer-comp' 

App.component('counter-comp',CounterComp)


Proxy in JavaScript


Multiple Vue App Vs single page app

data binding: a way of passing data from component code to the same component template
{{prop-name}} 
or
<html-element v-bind:attribute="prop1">
or
<html-element :attribute="prop1">

event binding:a way of passing data to component code from the same component template

<html-element v-on:event-name="method"> <== automatically event object is passed as an argument
<html-element v-on:event-name="method($event,other-data)">

two-way binding:
a. mixture of two different one way binding related to same property
<html-element v-bind:attribute="prop1" v-on:event-name="method">
b. v-model directive
<html-element v-model="prop1">







